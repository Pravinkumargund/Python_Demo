# Python If-Else
n = int(input())
if n % 2:
    print("Weird")
elif 2 <= n <= 5:
    print("Not Weird")
elif 6 <= n <= 20:
    print("Weird")
else:
    print("Not Weird")
    
# Arithmetic Operators
a = int(input())
b = int(input())
print(a+b)
print(a-b)
print(a*b)

# Python: Division
a = int(input())
b = int(input())
print(a//b)
print(a/b)

# Loops
n = int(input())
print(*[num**2 for num in range(n)], sep='\n')
or
n = int(input())
for i in range(n):
    print(i**2)
    
# Write a function
def is_leap(year):
    leap = False
    # Write your logic here
    if (year %4 == 0 )and (year %100 != 0 or year % 400 == 0):
        leap = True
    return leap

year = int(input())
print(is_leap(year))

# List Comprehensions
if __name__ == '__main__':
    x = int(input())
    y = int(input())
    z = int(input())
    n = int(input())
    x1 = [p for p in range(x+1)]
    y1 = [q for q in range(y+1)]
    z1 = [z for z in range(z+1)]
    perm = [[i,j,k]for i in x1 for j in y1 for k in z1]
    req = [l for l in perm if sum(l)!= n]
    print(req)

# String Split and Join

def split_and_join(line):
    # write your code here
    return'-'.join(line.split(" "))
if __name__ == '__main__':
    line = input()
    result = split_and_join(line)
    print(result)

# What's Your Name? 

def print_full_name(first, last):
    # Write your code here
  OR#print("Hello {} {}! You just delved into python.".format(first,last))
    print("Hello %s %s! You just delved into python."%(first,last))
if __name__ == '__main__':
    first_name = input()
    last_name = input()
    print_full_name(first_name, last_name)

# Mutations
def mutate_string(string, position, character):
    return string[:position]+character+string[position+1:]
#position is 5 ie k, take the character till position ie 4th position
#replacing a with k ie character
#last adding remaining character string 
if __name__ == '__main__':
    s = input()
    i, c = input().split()
    s_new = mutate_string(s, int(i), c)
    print(s_new)
    
# Find a string

def count_substring(string, sub_string):
    # ml = len(string)
    # sl = len(sub_string)
    # c = 0
    # for i in range(ml -sl+1):
    #     if (string[i:(i+sl)]==sub_string):
    #         c=c+1
    # return c
=====OR=====
    c=0
    for i, letters in enumerate(string):
        if sub_string in string[i: i + len(sub_string)]:
            c = c+1
    return c
if __name__ == '__main__':
    string = input().strip()
    sub_string = input().strip()
    count = count_substring(string, sub_string)
    print(count)
